---
import { getCollection } from "astro:content";
import Layout from "../../layouts/Main.astro";
import ArrowLeftIcon from "@astropub/icons/ArrowLeft";
import ArrowRightIcon from "@astropub/icons/ArrowRight";

const pages = await getCollection("wizard", ({ data }) => {
  return data.date <= new Date();
});

const { slug } = Astro.params;

const page = pages.find((page) => page.slug == slug);

if (!page) return Astro.redirect("/404");

const others = await getCollection("wizard", ({ data }) => {
  return data.book == page.data.book && data.date <= new Date();
});

const currentPage = others.findIndex((other) => other.slug == page.slug);
let previousPage, nextPage;

previousPage = currentPage > 0 ? currentPage - 1 : null;
nextPage = currentPage < others.length - 1 ? currentPage + 1 : null;

const { Content } = await page.render();
---

<Layout {...page.data}>
  <div class="mt-[12rem] grid grid-cols-1 xl:grid-cols-6">
    <div class="hidden xl:block">
      <span class="font-work text-[2rem]">{page.data.book}</span>
      <ul>
        {
          others.map((other) => (
            <li
              class={
                other.slug == page.slug ? "text-secondary" : "text-[#3b3b3b]"
              }
            >
              <a href={`/wizard/${other.slug}/`}>
                {other.data.title}
                {other.data.draft ? (
                  <span class="text-red-500">_draft</span>
                ) : (
                  ""
                )}
              </a>
            </li>
          ))
        }
      </ul>
    </div>
    <article
      class="prose-xl select-text text-[1.5rem] prose-blockquote:rounded prose-blockquote:bg-[#1b1b1b] prose-blockquote:px-4 prose-blockquote:py-1 prose-code:font-fira prose-code:text-[1rem] xl:col-span-5 xl:text-[1.2rem]"
    >
      <Content />
      <div class="mt-32 grid grid-cols-2">
        {
          previousPage != null ? (
            <a
              class="flex items-center justify-center space-x-8 p-4"
              href={`/wizard/${others[previousPage].slug}`}
            >
              <ArrowLeftIcon size="1.5x" />
              <span class="hidden xl:block">Previous Page</span>
            </a>
          ) : (
            <div />
          )
        }
        {
          nextPage != null ? (
            <a
              class="flex items-center justify-center space-x-8 p-4"
              href={`/wizard/${others[nextPage].slug}`}
            >
              <span class="hidden xl:block">Next Page</span>
              <ArrowRightIcon size="1.5x" />
            </a>
          ) : (
            <div />
          )
        }
      </div>
    </article>
  </div>
</Layout>
